name: "tagged-release"

on:
  push:
    #    branches:
    #       - "master"
    #      - "release-*"
    tags:
      - "v*"

jobs:
  build:
    name: "build"
    runs-on: "ubuntu-latest"

    strategy:
      matrix:
        include:
          - goarch: amd64
            goos: linux
          - goarch: amd64
            goos: darwin
          - goarch: amd64
            goos: windows
          - goarch: arm64
            goos: linux
          - goarch: arm64
            goos: darwin
          - goarch: arm64
            goos: windows
    
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
#        run: go build -v ./...
        run: go build -v -o cau_go main.go

      - name: Rename file
        if: ${{ matrix.goos == 'windows' }}
        run: mv cau_go cau_go.exe

      - name: GetVersion
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Packaging...
        run: |
          find *|grep cau_go|xargs zip cau_go-${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.RELEASE_VERSION }}.zip 

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          # Artifact name
          # name is only a identifier that means when you download use name the file name you download is actually the `path`
          # so we use a simple file name
          # TODO:this is not a elegent implement due to that we can't use wildcard when download: see https://github.com/actions/download-artifact/issues/6
          #          name: ${{ matrix.goos }}-${{ matrix.goarch }}.zip
          # use original name to prevent file overlapped
          name: cau_go-${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.RELEASE_VERSION }}.zip # optional, default is artifact
          # A file, directory or wildcard pattern that describes what to upload
          path: cau_go-${{ matrix.goos }}-${{ matrix.goarch }}-${{ env.RELEASE_VERSION }}.zip
  
  
  release:
    name: "release"
    runs-on: "ubuntu-latest"
    needs: build
    steps:
      - name: GetVersion
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: cau_go-linux-amd64-${{ env.RELEASE_VERSION }}.zip

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: cau_go-darwin-amd64-${{ env.RELEASE_VERSION }}.zip
      #          name: darwin-amd64.zip

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: cau_go-windows-amd64-${{ env.RELEASE_VERSION }}.zip
        #          name: windows-amd64.zip

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: cau_go-linux-arm64-${{ env.RELEASE_VERSION }}.zip
          #          name: linux-arm64.zip

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: cau_go-darwin-arm64-${{ env.RELEASE_VERSION }}.zip
          #          name: darwin-arm64.zip

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: cau_go-windows-arm64-${{ env.RELEASE_VERSION }}.zip
          #          name: windows-arm64.zip

      - name: Print github.ref
        run: |
          echo ${{ github.ref }}
      
      # ${{ github.ref }}:如果是tag，则是refs/tags/v0.1.20
      # 如果是branch，则是refs/heads/master
      - name: Release
        if: startsWith(github.ref, 'refs/tags/v') && !contains(github.ref,'beta')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: false
          files: |
            cau_go-*-${{ env.RELEASE_VERSION }}.zip


      - name: Pre-Release
        #        if: startsWith(github.ref, 'refs/heads/release-')
        if: startsWith(github.ref, 'refs/tags/v') && contains(github.ref,'beta')
        uses: softprops/action-gh-release@v1
        with:
          generate_release_notes: true
          prerelease: true
          files: |
            cau_go-*-${{ env.RELEASE_VERSION }}.zip
        


